{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "commonSettings": {
            "type": "object",
            "metadata": {
                "Description": "Common settings object"
            }
        },
        "storageSettings": {
            "type": "object",
            "metadata": {
                "Description": "Storage settings object"
            }
        },
        "networkSettings": {
            "type": "object",
            "metadata": {
                "Description": "Network settings object"
            }
        },
        "machineSettings": {
            "type": "object",
            "metadata": {
                "Description": "Machine settings object"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "Description": "Administrator password used when provisioning virtual machines"
            }
        }
    },
    "variables": {

    },
    "resources": [{
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat('nicMember', parameters('machineSettings').machineIndex)]",
        "apiVersion": "2015-05-01-preview",
        "location": "[parameters('commonSettings').location]",
        "properties": {
            "ipConfigurations": [{
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[concat(parameters('networkSettings').machineIpPrefix, parameters('machineSettings').machineIndex)]",
                    "subnet": {
                        "id": "[parameters('networkSettings').subnetRef]"
                    }
                }
            }]
        }
    }, {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat('vmMember', parameters('machineSettings').machineIndex)]",
        "apiVersion": "2015-05-01-preview",
        "location": "[parameters('commonSettings').location]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', 'nicMember', parameters('machineSettings').machineIndex)]"
        ],
        "properties": {
            "availabilitySet": {
                "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('commonSettings').availabilitySetName)]"
            },
            "hardwareProfile": {
                "vmSize": "[parameters('machineSettings').vmSize]"
            },
            "osProfile": {
                "computername": "[concat(parameters('machineSettings').machineNamePrefix, 'member', parameters('machineSettings').machineIndex)]",
                "adminUsername": "[parameters('machineSettings').adminUsername]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
                "imageReference": "[parameters('machineSettings').osImageReference]",
                "osDisk": {
                    "name": "osdisk",
                    "vhd": {
                        "uri": "[concat(parameters('storageSettings').destinationVhdsContainer, 'node-os-disk' , parameters('machineSettings').machineIndex, '.vhd')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [{
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('nicMember', parameters('machineSettings').machineIndex))]"
                }]
            }
        }
    }, {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat('vmMember', parameters('machineSettings').machineIndex, '/DockerExtension')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[parameters('commonSettings').location]",
        "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'vmMember', parameters('machineSettings').machineIndex)]"
        ],
        "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "DockerExtension",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
                "login": {
                    "username": "[parameters('commonSettings').dockerHubUsername]",
                    "password": "[parameters('commonSettings').dockerHubPassword]",
                    "email": "[parameters('commonSettings').dockerHubEmail]"
                }
            },
            "settings": {
                "compose": {
                    "neo4j": {
                        "image": "jbkielis/docker-neo4j-enterprise",
                        "ports": [
                            "7474:7474",
                            "7473:7473",
                            "5001:5001",
                            "6001:6001"
                        ],
                        "volumes": [
                            "/datadrive:/datadrive"
                        ],
                        "environment": {
                            "SERVER_ID": "[parameters('machineSettings').machineIndex]",
                            "NEO4J_AUTH": "[concat(parameters('commonSettings').neo4jUsername,':', parameters('commonSettings').neo4jPassword)]",
                            "JAVA_HEAP_SIZE": "[parameters('commonSettings').neo4jHeapSizeMb]"
                        },
                        "restart": "always"
                    },
                    "nerve": {
                        "image": "asiragusa/nerve",
                        "restart": "always",
                        "command": "[concat('-d zk://', parameters('commonSettings').zooKeeperAddresses, '/nerve -s neo4j:tcp:7474:/neo4j')]",
                        "volumes": [
                            "/usr/bin/docker:/usr/bin/docker:ro",
                            "/lib64/libdevmapper.so.1.02:/lib/libdevmapper.so.1.02:ro",
                            "/var/run/docker.sock:/var/run/docker.sock"
                        ],
                        "environment": {
                            "SERVICE_HOST": "1.1.1.1"
                        }
                    }
                }
            }
        }
    }]
}
